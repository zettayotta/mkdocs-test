# Project information
site_name: aBjelke
# site_url: https://squidfunk.github.io/mkdocs-material/
site_author: Axel Bjelke
site_description: Description of my new site comes here...

# Repository
repo_name: zettayotta/mkdocs-test
repo_url: https://github.com/zettayotta/mkdocs-test
#edit_uri: edit/main/docs/ # Specify the path from the base repository URL (repo_url) to the directory where your documentation source files are stored. See also: https://www.mkdocs.org/user-guide/configuration/

# Copyright
copyright: Copyright &copy; 2025 Axel Bjelke - This work is licensed under CC BY-NC-SA 4.0

# Configuration
theme:
  # Setup and theme structure: https://squidfunk.github.io/mkdocs-material/customization/#setup-and-theme-structure
  name: material
  # The custom_dir setting is used to specify a directory containing customizations or overrides for the theme files. See also:https://www.mkdocs.org/user-guide/customizing-your-theme/
  #custom_dir:
  # Changing the logo and icons: https://squidfunk.github.io/mkdocs-material/setup/changing-the-logo-and-icons/
  logo: assets/logo_144x144.png
  #favicon: assets/favicon.ico
  #icon:
    #repo: fontawesome/brands/github
    #logo: fontawesome/regular/folder-open
  # Changing the fonts: https://squidfunk.github.io/mkdocs-material/setup/changing-the-fonts/
  font:
    text: Roboto
    code: Roboto Mono
    #code: JetBrains Mono #perfectmediaserver uses this
  # Changing the language: https://squidfunk.github.io/mkdocs-material/setup/changing-the-language/
  # language: en # Default is 'en'. Multi language require som extra work (as of 2025). 
  # Changing the colors: https://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/
  palette:
     # Palette toggle for automatic mode
    - media: "(prefers-color-scheme)"
      toggle:
        icon: material/brightness-auto
        name: Switch to light mode
    # Palette toggle for light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: blue
      accent: teal
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode
    # Palette toggle for dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: deep orange
      accent: teal
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
  features:
    - content.action.edit # Edit this page button for code actions.
    - content.action.view # View source of this page button for code actions.
    # Setting up navigation: https://squidfunk.github.io/mkdocs-material/setup/setting-up-navigation/
    - navigation.instant # !The site_url setting must be set! When instant loading is enabled, clicks on all internal links will be intercepted and dispatched via XHR without fully reloading the page.
    #- navigation.instant.prefetch # Insiders only
    - navigation.instant.progress # The progress indicator will only show if the page hasn't finished loading after 400ms, so that fast connections will never show it for a better instant experience.
    - navigation.tabs # When tabs are enabled, top-level sections are rendered in a menu layer below the header for viewports above 1220px, but remain as-is on mobile.
    #- navigation.tabs.sticky # When sticky tabs are enabled, navigation tabs will lock below the header and always remain visible when scrolling down.
    - navigation.tracking # Anchor tracking: When anchor tracking is enabled, the URL in the address bar is automatically updated with the active anchor as highlighted in the table of contents.
    - navigation.sections # When sections are enabled, top-level sections are rendered as groups in the sidebar for viewports above 1220px, but remain as-is on mobile.
    #- navigation.expand # When expansion is enabled, the left sidebar will expand all collapsible subsections by default, so the user doesn't have to open subsections manually.
    #- navigation.path #Navigation path Breadcrumbs: !Insiders only!
    #- navigation.prune # When pruning is enabled, only the visible navigation items are included in the rendered HTML, reducing the size of the built site by 33% or more.
    - navigation.indexes # When section index pages are enabled, documents can be directly attached to sections, which is particularly useful for providing overview pages.
    - navigation.top # Back-to-top button
    - search.suggest # When search suggestions are enabled, the search will display the likeliest completion for the last word which can be accepted with the Right key.
    - search.highlight # When search highlighting is enabled and a user clicks on a search result, Material for MkDocs will highlight all occurrences after following the link.
    - toc.follow # When anchor following for the table of contents is enabled, the sidebar is automatically scrolled so that the active anchor is always visible.
    #- toc.integrate # When navigation integration for the table of contents is enabled, it is always rendered as part of the navigation sidebar on the left.
  # insiders only
    # - navigation.path # breadcrumbs at the top of each page
    # - search.suggest

# Plugins
plugins:
  # Built-in plugins: https://squidfunk.github.io/mkdocs-material/plugins/
  # - blog
  - meta # The meta plugin solves the problem of setting metadata (front matter) for all pages in a folder, i.e., a subsection of your project, which is particularly useful to ensure that a certain subset of pages features specific tags, uses a custom template, or is attributed to an author.
  # - privacy
  - search # Built-in search plugin: Configure under features.
  - tags #The built-in tags plugin adds the ability to categorize any page with tags as part of the front matter of the page.
  # External plugins:
  # - glightbox: # Documentation: https://squidfunk.github.io/mkdocs-material/reference/images/#lightbox
  # - material-plausible # Documentation: https://github.com/notpushkin/material-plausible-plugin
  # - minify # Documentation: https://github.com/byrnereese/mkdocs-minify-plugin
  #      minify_html: true

# Hooks

# Additional configuration
extra:
  status: # A status can be assigned to each page, which is then displayed as part of the navigation sidebar.
    new: Recently added
    deprecated: Deprecated
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/zettayotta
      name: zettayotta on GitHub
    - icon: fontawesome/brands/bluesky
      link: https://bsky.app/profile/abjlke.bsky.social
    - icon: fontawesome/brands/youtube
      link: https://www.youtube.com/@AxelBjelke
    - icon: fontawesome/brands/linkedin
      link: https://www.linkedin.com/in/axel-bjelke-25b5a48a/

# Extensions
markdown_extensions:
  # Built-in extensions: https://squidfunk.github.io/mkdocs-material/setup/extensions/

  # Python Markdown
  - abbr # Abbreviations: adds the ability to add a small tooltip (glossary) to an element, by wrapping it with an abbr tag.
  - admonition # Admonition: enables coloured blocks mid article
  - attr_list # Attribute Lists: improves image handling (ref PMS), allows to add HTML attributes and CSS classes to almost every Markdown inline- and block-level element with a special syntax.
  - def_list # Definition Lists: adds the ability to add definition lists (more commonly known as description lists – dl in HTML) via Markdown to a document.
  - footnotes # Footnotes: allows to define inline footnotes, which are then rendered below all Markdown content of a document.
  - md_in_html # Markdown in HTML: allows for writing Markdown inside of HTML, which is useful for wrapping Markdown content with custom elements.
  - toc: # Table of Contents: automatically generates a table of contents from a document, which Material for MkDocs will render as part of the resulting page.
      permalink: false # adds an anchor link containing the paragraph symbol ¶ or another custom symbol at the end of each headline.
      toc_depth: 4
  - tables # Tables: adds the ability to create tables in Markdown by using a simple syntax.

  # Python Markdown Extensions
  #- pymdownx.arithmatex: # Arithmatex: allows for rendering of block and inline block equations and integrates seamlessly with MathJax1 – a library for mathematical typesetting.
      #generic: true
  - pymdownx.betterem: # BetterEm: improves the detection of Markup to emphasize text in Markdown using special characters, i.e. for **bold** and _italic_ formatting.
      smart_enable: all
  - pymdownx.blocks.caption # Caption: adds the ability to add captions to any Markdown block, including images, tables, and code blocks.
  - pymdownx.caret # Caret: Superscript and insert with a caret (^) character.
  #- pymdownx.critic: # Critic: allows for the usage of Critic Markup to highlight added, deleted or updated sections in a document, i.e. for tracking changes in Markdown syntax.
      #mode: view
  - pymdownx.details # Details: enables collapsible admonitions (call-outs).
  - pymdownx.emoji: # Emoji: automatically inlines bundled and custom icons and emojis in *.svg file format into the resulting HTML page.
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - pymdownx.highlight # Highlight: adds support for syntax highlighting of code blocks (with the help of SuperFences) and inline code blocks (with the help of InlineHilite).
  - pymdownx.inlinehilite # InlineHilite: add support for syntax highlighting of inline code blocks. It's built on top of the Highlight extension, from which it sources its configuration.
  - pymdownx.keys # Keys: adds a simple syntax to allow for the rendering of keyboard keys and combinations.
  - pymdownx.mark # Mark: To mark some text, simply surround the text with double =.
  - pymdownx.smartsymbols # SmartSymbols: onverts some sequences of characters into their corresponding symbols, e.g. copyright symbols or fractions.
  #- pymdownx.snippets # Snippets: adds the ability to embed content from arbitrary files into a document, including other documents or source files, by using a simple syntax.
  - pymdownx.superfences # SuperFences: enables nesting of code and content blocks
  - pymdownx.tabbed: # Tabbed: allows the usage of content tabs, a simple way to group related content and code blocks under accessible tabs.
      alternate_style: true
  - pymdownx.tasklist: # Tasklist: allows for the usage of GitHub Flavored Markdown inspired task lists, following the same syntactical conventions.
      custom_checkbox: true
  - pymdownx.tilde # Tilde: Subscript and delete with a tilde (~) character.



# Page tree
nav:
  - Home: index.md
  - IT:
    - Client:
      - Client machines: it/client/client_machines/client_machines.md
    - Server:
      - it/server/index.md
      - Cloud: it/server/cloud/cloud.md
      - NAS: it/server/nas/nas.md
    - Homelab:
      - it/homelab/index.md
      - it/homelab/future_plans.md
      - Testfolder:
        - it/homelab/testfolder/page1.md
        #- it/homelab/testfolder/page2.md
    #- Software:
    #- Local infrastructure:
    #- Remote infrastructure:
  - Tags: tags.md
  - About: about/about.md